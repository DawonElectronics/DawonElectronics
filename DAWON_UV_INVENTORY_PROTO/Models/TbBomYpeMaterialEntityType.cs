// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable enable

namespace DAWON_UV_INVENTORY_PROTO.Models
{
    internal partial class TbBomYpeMaterialEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "DAWON_UV_INVENTORY_PROTO.Models.TbBomYpeMaterial",
                typeof(TbBomYpeMaterial),
                baseEntityType);

            var bomid = runtimeEntityType.AddProperty(
                "Bomid",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Bomid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Bomid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                maxLength: 100);
            bomid.AddAnnotation("Relational:ColumnName", "bomid");
            bomid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var arraypcs = runtimeEntityType.AddProperty(
                "Arraypcs",
                typeof(double?),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Arraypcs", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Arraypcs>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            arraypcs.AddAnnotation("Relational:ColumnName", "arraypcs");
            arraypcs.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var assemblyitembomid = runtimeEntityType.AddProperty(
                "Assemblyitembomid",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Assemblyitembomid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Assemblyitembomid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            assemblyitembomid.AddAnnotation("Relational:ColumnName", "assemblyitembomid");
            assemblyitembomid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var assemblyitemid = runtimeEntityType.AddProperty(
                "Assemblyitemid",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Assemblyitemid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Assemblyitemid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            assemblyitemid.AddAnnotation("Relational:ColumnName", "assemblyitemid");
            assemblyitemid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var assemblyitemversion = runtimeEntityType.AddProperty(
                "Assemblyitemversion",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Assemblyitemversion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Assemblyitemversion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            assemblyitemversion.AddAnnotation("Relational:ColumnName", "assemblyitemversion");
            assemblyitemversion.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var assemblyqty = runtimeEntityType.AddProperty(
                "Assemblyqty",
                typeof(double?),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Assemblyqty", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Assemblyqty>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            assemblyqty.AddAnnotation("Relational:ColumnName", "assemblyqty");
            assemblyqty.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var botassemblyitemname = runtimeEntityType.AddProperty(
                "Botassemblyitemname",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Botassemblyitemname", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Botassemblyitemname>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 200);
            botassemblyitemname.AddAnnotation("Relational:ColumnName", "botassemblyitemname");
            botassemblyitemname.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var calculatepcs = runtimeEntityType.AddProperty(
                "Calculatepcs",
                typeof(decimal?),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Calculatepcs", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Calculatepcs>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            calculatepcs.AddAnnotation("Relational:ColumnName", "calculatepcs");
            calculatepcs.AddAnnotation("Relational:ColumnType", "numeric(18, 0)");
            calculatepcs.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var color = runtimeEntityType.AddProperty(
                "Color",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Color", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Color>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            color.AddAnnotation("Relational:ColumnName", "color");
            color.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var consumabletype = runtimeEntityType.AddProperty(
                "Consumabletype",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Consumabletype", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Consumabletype>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            consumabletype.AddAnnotation("Relational:ColumnName", "consumabletype");
            consumabletype.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var consumabletype2 = runtimeEntityType.AddProperty(
                "Consumabletype2",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Consumabletype2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Consumabletype2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 300);
            consumabletype2.AddAnnotation("Relational:ColumnName", "consumabletype2");
            consumabletype2.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var inktype = runtimeEntityType.AddProperty(
                "Inktype",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Inktype", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Inktype>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 300);
            inktype.AddAnnotation("Relational:ColumnName", "inktype");
            inktype.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var lvl = runtimeEntityType.AddProperty(
                "Lvl",
                typeof(short?),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Lvl", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Lvl>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lvl.AddAnnotation("Relational:ColumnName", "lvl");
            lvl.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var maker = runtimeEntityType.AddProperty(
                "Maker",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Maker", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Maker>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            maker.AddAnnotation("Relational:ColumnName", "maker");
            maker.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var parentbomid = runtimeEntityType.AddProperty(
                "Parentbomid",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Parentbomid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Parentbomid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            parentbomid.AddAnnotation("Relational:ColumnName", "parentbomid");
            parentbomid.AddAnnotation("Relational:ColumnType", "ntext");
            parentbomid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var parentsAssemblyitemid = runtimeEntityType.AddProperty(
                "ParentsAssemblyitemid",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("ParentsAssemblyitemid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<ParentsAssemblyitemid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            parentsAssemblyitemid.AddAnnotation("Relational:ColumnName", "parents_assemblyitemid");
            parentsAssemblyitemid.AddAnnotation("Relational:ColumnType", "ntext");
            parentsAssemblyitemid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var parentsAssemblyitemversion = runtimeEntityType.AddProperty(
                "ParentsAssemblyitemversion",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("ParentsAssemblyitemversion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<ParentsAssemblyitemversion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            parentsAssemblyitemversion.AddAnnotation("Relational:ColumnName", "parents_assemblyitemversion");
            parentsAssemblyitemversion.AddAnnotation("Relational:ColumnType", "ntext");
            parentsAssemblyitemversion.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plantid = runtimeEntityType.AddProperty(
                "Plantid",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Plantid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Plantid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            plantid.AddAnnotation("Relational:ColumnName", "plantid");
            plantid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var pnlsize = runtimeEntityType.AddProperty(
                "Pnlsize",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Pnlsize", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Pnlsize>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            pnlsize.AddAnnotation("Relational:ColumnName", "pnlsize");
            pnlsize.AddAnnotation("Relational:ColumnType", "ntext");
            pnlsize.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var pnlsizexaxis = runtimeEntityType.AddProperty(
                "Pnlsizexaxis",
                typeof(double?),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Pnlsizexaxis", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Pnlsizexaxis>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            pnlsizexaxis.AddAnnotation("Relational:ColumnName", "pnlsizexaxis");
            pnlsizexaxis.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var pnlsizeyaxis = runtimeEntityType.AddProperty(
                "Pnlsizeyaxis",
                typeof(double?),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Pnlsizeyaxis", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Pnlsizeyaxis>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            pnlsizeyaxis.AddAnnotation("Relational:ColumnName", "pnlsizeyaxis");
            pnlsizeyaxis.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var requirementqty = runtimeEntityType.AddProperty(
                "Requirementqty",
                typeof(double?),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Requirementqty", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Requirementqty>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            requirementqty.AddAnnotation("Relational:ColumnName", "requirementqty");
            requirementqty.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var rootAssemblyitemid = runtimeEntityType.AddProperty(
                "RootAssemblyitemid",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("RootAssemblyitemid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<RootAssemblyitemid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            rootAssemblyitemid.AddAnnotation("Relational:ColumnName", "root_assemblyitemid");
            rootAssemblyitemid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var rootAssemblyitemversion = runtimeEntityType.AddProperty(
                "RootAssemblyitemversion",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("RootAssemblyitemversion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<RootAssemblyitemversion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            rootAssemblyitemversion.AddAnnotation("Relational:ColumnName", "root_assemblyitemversion");
            rootAssemblyitemversion.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var rootBomid = runtimeEntityType.AddProperty(
                "RootBomid",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("RootBomid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<RootBomid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 100);
            rootBomid.AddAnnotation("Relational:ColumnName", "root_bomid");
            rootBomid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var spec = runtimeEntityType.AddProperty(
                "Spec",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Spec", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Spec>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            spec.AddAnnotation("Relational:ColumnName", "spec");
            spec.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var userlayer = runtimeEntityType.AddProperty(
                "Userlayer",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Userlayer", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Userlayer>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 300);
            userlayer.AddAnnotation("Relational:ColumnName", "userlayer");
            userlayer.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var usersequence = runtimeEntityType.AddProperty(
                "Usersequence",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Usersequence", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Usersequence>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            usersequence.AddAnnotation("Relational:ColumnName", "usersequence");
            usersequence.AddAnnotation("Relational:ColumnType", "ntext");
            usersequence.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var workmethod = runtimeEntityType.AddProperty(
                "Workmethod",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Workmethod", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Workmethod>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 200);
            workmethod.AddAnnotation("Relational:ColumnName", "workmethod");
            workmethod.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var worksurface = runtimeEntityType.AddProperty(
                "Worksurface",
                typeof(string),
                propertyInfo: typeof(TbBomYpeMaterial).GetProperty("Worksurface", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbBomYpeMaterial).GetField("<Worksurface>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            worksurface.AddAnnotation("Relational:ColumnName", "worksurface");
            worksurface.AddAnnotation("Relational:ColumnType", "ntext");
            worksurface.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { bomid });
            runtimeEntityType.SetPrimaryKey(key);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "tb_bom_ype_material");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
