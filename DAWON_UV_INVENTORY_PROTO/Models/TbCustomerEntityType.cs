// <auto-generated />
using System;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable enable

namespace DAWON_UV_INVENTORY_PROTO.Models
{
    internal partial class TbCustomerEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "DAWON_UV_INVENTORY_PROTO.Models.TbCustomer",
                typeof(TbCustomer),
                baseEntityType);

            var custId = runtimeEntityType.AddProperty(
                "CustId",
                typeof(string),
                propertyInfo: typeof(TbCustomer).GetProperty("CustId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbCustomer).GetField("<CustId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                maxLength: 10);
            custId.AddAnnotation("Relational:ColumnName", "cust_id");
            custId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var custCode = runtimeEntityType.AddProperty(
                "CustCode",
                typeof(string),
                propertyInfo: typeof(TbCustomer).GetProperty("CustCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbCustomer).GetField("<CustCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 3,
                unicode: false);
            custCode.AddAnnotation("Relational:ColumnName", "cust_code");
            custCode.AddAnnotation("Relational:IsFixedLength", true);
            custCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var custName = runtimeEntityType.AddProperty(
                "CustName",
                typeof(string),
                propertyInfo: typeof(TbCustomer).GetProperty("CustName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbCustomer).GetField("<CustName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 30);
            custName.AddAnnotation("Relational:ColumnName", "cust_name");
            custName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { custId });
            runtimeEntityType.SetPrimaryKey(key);

            var uNIQUE_customer_code = runtimeEntityType.AddIndex(
                new[] { custCode },
                name: "UNIQUE_customer_code",
                unique: true);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "tb_customer");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
