// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable enable

namespace DAWON_UV_INVENTORY_PROTO.Models
{
    internal partial class TbUvToolinfoEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType? baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "DAWON_UV_INVENTORY_PROTO.Models.TbUvToolinfo",
                typeof(TbUvToolinfo),
                baseEntityType);

            var productId = runtimeEntityType.AddProperty(
                "ProductId",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("ProductId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<ProductId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                maxLength: 100);
            productId.AddAnnotation("Relational:ColumnName", "product_id");
            productId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var arrayBlk = runtimeEntityType.AddProperty(
                "ArrayBlk",
                typeof(int?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("ArrayBlk", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<ArrayBlk>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            arrayBlk.AddAnnotation("Relational:ColumnName", "array_blk");
            arrayBlk.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var camFinished = runtimeEntityType.AddProperty(
                "CamFinished",
                typeof(bool?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("CamFinished", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<CamFinished>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            camFinished.AddAnnotation("Relational:DefaultValueSql", "((0))");
            camFinished.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var createDate = runtimeEntityType.AddProperty(
                "CreateDate",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("CreateDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<CreateDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 20);
            createDate.AddAnnotation("Relational:ColumnName", "create_date");
            createDate.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var cuThickness = runtimeEntityType.AddProperty(
                "CuThickness",
                typeof(decimal?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("CuThickness", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<CuThickness>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            cuThickness.AddAnnotation("Relational:ColumnName", "cu_thickness");
            cuThickness.AddAnnotation("Relational:ColumnType", "decimal(7, 3)");
            cuThickness.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var custComment = runtimeEntityType.AddProperty(
                "CustComment",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("CustComment", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<CustComment>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            custComment.AddAnnotation("Relational:ColumnName", "cust_comment");
            custComment.AddAnnotation("Relational:ColumnType", "ntext");
            custComment.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var custId = runtimeEntityType.AddProperty(
                "CustId",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("CustId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<CustId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 10);
            custId.AddAnnotation("Relational:ColumnName", "cust_id");
            custId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var custModelname = runtimeEntityType.AddProperty(
                "CustModelname",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("CustModelname", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<CustModelname>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 200);
            custModelname.AddAnnotation("Relational:ColumnName", "cust_modelname");
            custModelname.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var custName = runtimeEntityType.AddProperty(
                "CustName",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("CustName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<CustName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 30);
            custName.AddAnnotation("Relational:ColumnName", "cust_name");
            custName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var custRevision = runtimeEntityType.AddProperty(
                "CustRevision",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("CustRevision", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<CustRevision>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 20);
            custRevision.AddAnnotation("Relational:ColumnName", "cust_revision");
            custRevision.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var custToolno = runtimeEntityType.AddProperty(
                "CustToolno",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("CustToolno", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<CustToolno>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 100);
            custToolno.AddAnnotation("Relational:ColumnName", "cust_toolno");
            custToolno.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var customerShipto = runtimeEntityType.AddProperty(
                "CustomerShipto",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("CustomerShipto", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<CustomerShipto>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 200);
            customerShipto.AddAnnotation("Relational:ColumnName", "customer_shipto");
            customerShipto.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var depth = runtimeEntityType.AddProperty(
                "Depth",
                typeof(decimal?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("Depth", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<Depth>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            depth.AddAnnotation("Relational:ColumnName", "depth");
            depth.AddAnnotation("Relational:ColumnType", "decimal(7, 3)");
            depth.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var endCustomer = runtimeEntityType.AddProperty(
                "EndCustomer",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("EndCustomer", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<EndCustomer>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            endCustomer.AddAnnotation("Relational:ColumnName", "end_customer");
            endCustomer.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var holeCount = runtimeEntityType.AddProperty(
                "HoleCount",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("HoleCount", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<HoleCount>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            holeCount.AddAnnotation("Relational:ColumnName", "hole_count");
            holeCount.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var holeCount1 = runtimeEntityType.AddProperty(
                "HoleCount1",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("HoleCount1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<HoleCount1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 20);
            holeCount1.AddAnnotation("Relational:ColumnName", "hole_count_1");
            holeCount1.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var holeCount2 = runtimeEntityType.AddProperty(
                "HoleCount2",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("HoleCount2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<HoleCount2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 20);
            holeCount2.AddAnnotation("Relational:ColumnName", "hole_count_2");
            holeCount2.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var holeCountPth = runtimeEntityType.AddProperty(
                "HoleCountPth",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("HoleCountPth", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<HoleCountPth>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 20);
            holeCountPth.AddAnnotation("Relational:ColumnName", "hole_count_pth");
            holeCountPth.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var insulInfo = runtimeEntityType.AddProperty(
                "InsulInfo",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("InsulInfo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<InsulInfo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            insulInfo.AddAnnotation("Relational:ColumnName", "insul_info");
            insulInfo.AddAnnotation("Relational:ColumnType", "ntext");
            insulInfo.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var insulThickness = runtimeEntityType.AddProperty(
                "InsulThickness",
                typeof(decimal?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("InsulThickness", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<InsulThickness>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            insulThickness.AddAnnotation("Relational:ColumnName", "insul_thickness");
            insulThickness.AddAnnotation("Relational:ColumnType", "decimal(7, 3)");
            insulThickness.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var insulType = runtimeEntityType.AddProperty(
                "InsulType",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("InsulType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<InsulType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 30);
            insulType.AddAnnotation("Relational:ColumnName", "insul_type");
            insulType.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var layer = runtimeEntityType.AddProperty(
                "Layer",
                typeof(int?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("Layer", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<Layer>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            layer.AddAnnotation("Relational:ColumnName", "layer");
            layer.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var layerStructure = runtimeEntityType.AddProperty(
                "LayerStructure",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("LayerStructure", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<LayerStructure>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 10);
            layerStructure.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var mainHoleSize = runtimeEntityType.AddProperty(
                "MainHoleSize",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("MainHoleSize", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<MainHoleSize>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 10);
            mainHoleSize.AddAnnotation("Relational:ColumnName", "main_hole_size");
            mainHoleSize.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var mesPrcCode = runtimeEntityType.AddProperty(
                "MesPrcCode",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("MesPrcCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<MesPrcCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            mesPrcCode.AddAnnotation("Relational:ColumnName", "mes_prc_code");
            mesPrcCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var mesPrcName = runtimeEntityType.AddProperty(
                "MesPrcName",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("MesPrcName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<MesPrcName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 200);
            mesPrcName.AddAnnotation("Relational:ColumnName", "mes_prc_name");
            mesPrcName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var mesSeqCode = runtimeEntityType.AddProperty(
                "MesSeqCode",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("MesSeqCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<MesSeqCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 10);
            mesSeqCode.AddAnnotation("Relational:ColumnName", "mes_seq_code");
            mesSeqCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var pcs = runtimeEntityType.AddProperty(
                "Pcs",
                typeof(int?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("Pcs", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<Pcs>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            pcs.AddAnnotation("Relational:ColumnName", "pcs");
            pcs.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var pcsperstrip = runtimeEntityType.AddProperty(
                "Pcsperstrip",
                typeof(int?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("Pcsperstrip", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<Pcsperstrip>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            pcsperstrip.AddAnnotation("Relational:ColumnName", "pcsperstrip");
            pcsperstrip.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var pcssizeX = runtimeEntityType.AddProperty(
                "PcssizeX",
                typeof(decimal?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("PcssizeX", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<PcssizeX>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            pcssizeX.AddAnnotation("Relational:ColumnName", "pcssize_x");
            pcssizeX.AddAnnotation("Relational:ColumnType", "decimal(6, 2)");
            pcssizeX.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var pcssizeY = runtimeEntityType.AddProperty(
                "PcssizeY",
                typeof(decimal?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("PcssizeY", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<PcssizeY>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            pcssizeY.AddAnnotation("Relational:ColumnName", "pcssize_y");
            pcssizeY.AddAnnotation("Relational:ColumnType", "decimal(6, 2)");
            pcssizeY.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var prcCode = runtimeEntityType.AddProperty(
                "PrcCode",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("PrcCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<PrcCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 20);
            prcCode.AddAnnotation("Relational:ColumnName", "prc_code");
            prcCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var prcLayerFrom1 = runtimeEntityType.AddProperty(
                "PrcLayerFrom1",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("PrcLayerFrom1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<PrcLayerFrom1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 10);
            prcLayerFrom1.AddAnnotation("Relational:ColumnName", "PrcLayerFrom_1");
            prcLayerFrom1.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var prcLayerFrom2 = runtimeEntityType.AddProperty(
                "PrcLayerFrom2",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("PrcLayerFrom2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<PrcLayerFrom2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 10);
            prcLayerFrom2.AddAnnotation("Relational:ColumnName", "PrcLayerFrom_2");
            prcLayerFrom2.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var prcLayerTo1 = runtimeEntityType.AddProperty(
                "PrcLayerTo1",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("PrcLayerTo1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<PrcLayerTo1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 10);
            prcLayerTo1.AddAnnotation("Relational:ColumnName", "PrcLayerTo_1");
            prcLayerTo1.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var prcLayerTo2 = runtimeEntityType.AddProperty(
                "PrcLayerTo2",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("PrcLayerTo2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<PrcLayerTo2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 10);
            prcLayerTo2.AddAnnotation("Relational:ColumnName", "PrcLayerTo_2");
            prcLayerTo2.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var prcName = runtimeEntityType.AddProperty(
                "PrcName",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("PrcName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<PrcName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 20);
            prcName.AddAnnotation("Relational:ColumnName", "prc_name");
            prcName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var prdCategory = runtimeEntityType.AddProperty(
                "PrdCategory",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("PrdCategory", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<PrdCategory>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 200);
            prdCategory.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var productType = runtimeEntityType.AddProperty(
                "ProductType",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("ProductType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<ProductType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 20);
            productType.AddAnnotation("Relational:ColumnName", "product_type");
            productType.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sample = runtimeEntityType.AddProperty(
                "Sample",
                typeof(bool?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("Sample", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<Sample>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            sample.AddAnnotation("Relational:ColumnName", "sample");
            sample.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var semCsdata = runtimeEntityType.AddProperty(
                "SemCsdata",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("SemCsdata", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<SemCsdata>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            semCsdata.AddAnnotation("Relational:ColumnName", "sem_csdata");
            semCsdata.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var semSsdata = runtimeEntityType.AddProperty(
                "SemSsdata",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("SemSsdata", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<SemSsdata>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            semSsdata.AddAnnotation("Relational:ColumnName", "sem_ssdata");
            semSsdata.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var stackType = runtimeEntityType.AddProperty(
                "StackType",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("StackType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<StackType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 20);
            stackType.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var striparrayBlk = runtimeEntityType.AddProperty(
                "StriparrayBlk",
                typeof(int?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("StriparrayBlk", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<StriparrayBlk>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            striparrayBlk.AddAnnotation("Relational:ColumnName", "striparrayBlk");
            striparrayBlk.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var striparrayCol = runtimeEntityType.AddProperty(
                "StriparrayCol",
                typeof(int?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("StriparrayCol", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<StriparrayCol>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            striparrayCol.AddAnnotation("Relational:ColumnName", "striparrayCol");
            striparrayCol.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var striparrayRow = runtimeEntityType.AddProperty(
                "StriparrayRow",
                typeof(int?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("StriparrayRow", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<StriparrayRow>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            striparrayRow.AddAnnotation("Relational:ColumnName", "striparrayRow");
            striparrayRow.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var toolNotes = runtimeEntityType.AddProperty(
                "ToolNotes",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("ToolNotes", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<ToolNotes>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            toolNotes.AddAnnotation("Relational:ColumnName", "tool_notes");
            toolNotes.AddAnnotation("Relational:ColumnType", "ntext");
            toolNotes.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var worksizeX = runtimeEntityType.AddProperty(
                "WorksizeX",
                typeof(decimal?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("WorksizeX", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<WorksizeX>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            worksizeX.AddAnnotation("Relational:ColumnName", "worksize_x");
            worksizeX.AddAnnotation("Relational:ColumnType", "decimal(6, 2)");
            worksizeX.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var worksizeY = runtimeEntityType.AddProperty(
                "WorksizeY",
                typeof(decimal?),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("WorksizeY", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<WorksizeY>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            worksizeY.AddAnnotation("Relational:ColumnName", "worksize_y");
            worksizeY.AddAnnotation("Relational:ColumnType", "decimal(6, 2)");
            worksizeY.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var ypNextResourceDefault = runtimeEntityType.AddProperty(
                "YpNextResourceDefault",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("YpNextResourceDefault", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<YpNextResourceDefault>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 200);
            ypNextResourceDefault.AddAnnotation("Relational:ColumnName", "yp_next_resource_default");
            ypNextResourceDefault.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var ypNextResourcelist = runtimeEntityType.AddProperty(
                "YpNextResourcelist",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("YpNextResourcelist", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<YpNextResourcelist>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            ypNextResourcelist.AddAnnotation("Relational:ColumnName", "yp_next_resourcelist");
            ypNextResourcelist.AddAnnotation("Relational:ColumnType", "ntext");
            ypNextResourcelist.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var ypeDatarev = runtimeEntityType.AddProperty(
                "YpeDatarev",
                typeof(string),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("YpeDatarev", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<YpeDatarev>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100,
                unicode: false);
            ypeDatarev.AddAnnotation("Relational:ColumnName", "ype_datarev");
            ypeDatarev.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { productId });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK_tb_toolinfo");

            var index = runtimeEntityType.AddIndex(
                new[] { custId });

            var index0 = runtimeEntityType.AddIndex(
                new[] { prcCode });

            var iX_tb_toolinfo = runtimeEntityType.AddIndex(
                new[] { productType, prcCode, custToolno },
                name: "IX_tb_toolinfo");

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("CustId")! },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("CustId")! })!,
                principalEntityType);

            var cust = declaringEntityType.AddNavigation("Cust",
                runtimeForeignKey,
                onDependent: true,
                typeof(TbCustomer),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("Cust", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<Cust>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var tbUvToolinfo = principalEntityType.AddNavigation("TbUvToolinfo",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<TbUvToolinfo>),
                propertyInfo: typeof(TbCustomer).GetProperty("TbUvToolinfo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbCustomer).GetField("<TbUvToolinfo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "tb_toolinfo_FK_custid");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey2(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("PrcCode")! },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("PrcCode")! })!,
                principalEntityType);

            var prcCodeNavigation = declaringEntityType.AddNavigation("PrcCodeNavigation",
                runtimeForeignKey,
                onDependent: true,
                typeof(TbPrctype),
                propertyInfo: typeof(TbUvToolinfo).GetProperty("PrcCodeNavigation", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbUvToolinfo).GetField("<PrcCodeNavigation>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var tbUvToolinfo = principalEntityType.AddNavigation("TbUvToolinfo",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<TbUvToolinfo>),
                propertyInfo: typeof(TbPrctype).GetProperty("TbUvToolinfo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(TbPrctype).GetField("<TbUvToolinfo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "tb_toolinfo_FK_prccode");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "tb_uv_toolinfo");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
