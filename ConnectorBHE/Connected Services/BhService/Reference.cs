//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------
using XN.Manager.MsSql.Data;
using System.ServiceModel;

namespace BhService
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "BhService.XNDataManagerService")]
    public interface XNDataManagerService
    {
        [OperationContractAttribute(Action = "http://tempuri.org/XNDataManagerService/ExecuteQuery", ReplyAction = "http://tempuri.org/XNDataManagerService/ExecuteQueryResponse")]
        ExecuteResult ExecuteQuery(ExecuteInfo exInfo);
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface XNDataManagerServiceChannel : BhService.XNDataManagerService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class XNDataManagerServiceClient : System.ServiceModel.ClientBase<BhService.XNDataManagerService>, BhService.XNDataManagerService
    {

        /// <summary>
        /// 서비스 엔드포인트를 구성하려면 이 부분 메서드를 구현합니다.
        /// </summary>
        /// <param name="serviceEndpoint">구성할 엔드포인트</param>
        /// <param name="clientCredentials">클라이언트 자격 증명</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);

        public XNDataManagerServiceClient(EndpointConfiguration endpointConfiguration) :
                base(XNDataManagerServiceClient.GetBindingForEndpoint(endpointConfiguration), XNDataManagerServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public XNDataManagerServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) :
                base(XNDataManagerServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public XNDataManagerServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) :
                base(XNDataManagerServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public XNDataManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public ExecuteResult ExecuteQuery(ExecuteInfo exInfo) => this.Channel.ExecuteQuery(exInfo);
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }

        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }

        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DataServiceBinding))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.PDADataServiceBinding))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("이름이 \'{0}\'인 엔드포인트를 찾을 수 없습니다.", endpointConfiguration));
        }

        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.DataServiceBinding))
            {
                return new System.ServiceModel.EndpointAddress("http://mes.bhe.kr/Service/DataService/MsSqlDataService.svc");
            }
            if ((endpointConfiguration == EndpointConfiguration.PDADataServiceBinding))
            {
                return new System.ServiceModel.EndpointAddress("http://mes.bhe.kr/Service/DataService/MsSqlDataService.svc/PDA");
            }
            throw new System.InvalidOperationException(string.Format("이름이 \'{0}\'인 엔드포인트를 찾을 수 없습니다.", endpointConfiguration));
        }

        public enum EndpointConfiguration
        {

            DataServiceBinding,

            PDADataServiceBinding,
        }
    }
}
